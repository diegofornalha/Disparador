services:

## --------------------------- POSTGRESQL --------------------------- ##

  postgres:
    image: postgres:15-alpine
    container_name: disparador_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: disparador_db
      POSTGRES_USER: disparador_user
      POSTGRES_PASSWORD: disparador_pass_2025
      TZ: America/Sao_Paulo
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=pt_BR.utf8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - disparador_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U disparador_user -d disparador_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

## --------------------------- REDIS (Cache) ------------------------ ##

  redis:
    image: redis:7-alpine
    container_name: disparador_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - disparador_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

## --------------------------- DISPARADOR --------------------------- ##

  disparador:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: disparador:latest
    container_name: disparador
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - disparador_data:/app/public/uploads
      - ./logs:/app/logs
    networks:
      - disparador_network
    environment:
      ## Configurações da Aplicação
      NODE_ENV: production
      PORT: 3000
      
      ## URLs e Domínios
      NEXT_PUBLIC_APP_URL: ${APP_URL:-http://localhost:3000}
      
      ## Autenticação
      AUTH_USERNAME: ${AUTH_USERNAME:-admin}
      AUTH_PASSWORD: ${AUTH_PASSWORD:-admin}
      AUTH_SECRET_KEY: ${AUTH_SECRET_KEY:-a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8}
      
      ## Banco de Dados PostgreSQL
      DATABASE_URL: postgresql://disparador_user:disparador_pass_2025@postgres:5432/disparador_db?sslmode=disable&connect_timeout=60
      DATABASE_POOL_MIN: 2
      DATABASE_POOL_MAX: 10
      
      ## Redis Cache
      REDIS_URL: redis://redis:6379
      REDIS_PREFIX: disparador
      
      ## Configurações WhatsApp
      NEXT_PUBLIC_AUTO_FILL_DDI: ${AUTO_FILL_DDI:-true}
      NEXT_PUBLIC_DEFAULT_LOCATION: ${DEFAULT_LOCATION:-BR}
      
      ## Evolution API
      NEXT_PUBLIC_EVOLUTION_URL: ${EVOLUTION_URL:-https://demo-whatsapp.agentesintegrados.com}
      NEXT_PUBLIC_EVOLUTION_API: ${EVOLUTION_API_KEY:-plataformademo2025}
      
      ## Chatwoot (Opcional)
      NEXT_PUBLIC_CHATWOOT_INTEGRATION: ${CHATWOOT_INTEGRATION:-false}
      NEXT_PUBLIC_CHATWOOT_DOMAIN: ${CHATWOOT_DOMAIN:-}
      NEXT_PUBLIC_CHATWOOT_ACCOUNT_ID: ${CHATWOOT_ACCOUNT_ID:-}
      NEXT_PUBLIC_CHATWOOT_TOKEN: ${CHATWOOT_TOKEN:-}
      NEXT_PUBLIC_CHATWOOT_DATABASE_CONNECTION_URI: ${CHATWOOT_DATABASE_URI:-}
      
      ## Upload e Limites
      MAX_FILE_SIZE: 25000000  # 25MB
      UPLOAD_DIR: /app/public/uploads
      
      ## Logs
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_DIR: /app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    labels:
      - "com.disparador.description=WhatsApp Bulk Message Sender"
      - "com.disparador.version=1.0.0"

## ------------------------------------------------------------------ ##

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  
  disparador_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/uploads
  
networks:
  disparador_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1