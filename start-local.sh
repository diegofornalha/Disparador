#!/bin/bash

echo "
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù

‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó     
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"

echo "================================================"
echo "üöÄ Inicializa√ß√£o Local do Disparador WhatsApp"
echo "================================================"

# Verificar se o arquivo .env existe
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Criando a partir das vari√°veis de ambiente..."
    
    # Criar arquivo .env com valores padr√£o se n√£o existirem
    cat > .env << EOF
NEXT_PUBLIC_EVOLUTION_URL=${NEXT_PUBLIC_EVOLUTION_URL:-http://localhost:8080}
NEXT_PUBLIC_EVOLUTION_API=${NEXT_PUBLIC_EVOLUTION_API:-your_api_key_here}
NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
NEXT_PUBLIC_AUTH_USERNAME=${AUTH_USERNAME:-admin}
NEXT_PUBLIC_AUTH_PASSWORD=${AUTH_PASSWORD:-admin}
AUTH_SECRET_KEY=${AUTH_SECRET_KEY:-secret_key_change_this}
NEXT_PUBLIC_CHATWOOT_INTEGRATION=${NEXT_PUBLIC_CHATWOOT_INTEGRATION:-false}
NEXT_PUBLIC_CHATWOOT_DOMAIN=${NEXT_PUBLIC_CHATWOOT_DOMAIN:-}
NEXT_PUBLIC_CHATWOOT_ACCOUNT_ID=${NEXT_PUBLIC_CHATWOOT_ACCOUNT_ID:-}
NEXT_PUBLIC_CHATWOOT_TOKEN=${NEXT_PUBLIC_CHATWOOT_TOKEN:-}
NEXT_PUBLIC_CHATWOOT_DATABASE_CONNECTION_URI=${NEXT_PUBLIC_CHATWOOT_DATABASE_CONNECTION_URI:-}
NEXT_PUBLIC_AUTO_FILL_DDI=${NEXT_PUBLIC_AUTO_FILL_DDI:-true}
NEXT_PUBLIC_DEFAULT_LOCATION=${NEXT_PUBLIC_DEFAULT_LOCATION:-BR}
EOF
    echo "‚úÖ Arquivo .env criado!"
else
    echo "‚úÖ Arquivo .env encontrado!"
fi

# Carregar vari√°veis do .env
export $(grep -v '^#' .env | xargs)

echo ""
echo "üîß Configura√ß√µes do Ambiente:"
echo "------------------------------------------------"
echo "üì° API URL: $NEXT_PUBLIC_EVOLUTION_URL"
echo "üîë API Key: ${NEXT_PUBLIC_EVOLUTION_API:0:8}..."
echo "üåê App URL: $NEXT_PUBLIC_APP_URL"
echo "üîí Node Environment: ${NODE_ENV:-development}"
echo "üåç Porta: 3000"
echo "================================================"

# Verificar se o Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Por favor, instale o Node.js primeiro."
    exit 1
fi

echo ""
echo "üì¶ Vers√£o do Node.js: $(node -v)"
echo "üì¶ Vers√£o do npm: $(npm -v)"

# Verificar se node_modules existe
if [ ! -d "node_modules" ]; then
    echo ""
    echo "üì¶ Instalando depend√™ncias..."
    npm install
    if [ $? -ne 0 ]; then
        echo "‚ùå Falha ao instalar depend√™ncias"
        exit 1
    fi
fi

# Criar diret√≥rio de uploads se n√£o existir
echo ""
echo "üìÅ Criando diret√≥rio de uploads..."
mkdir -p public/uploads
chmod -R 755 public/uploads

# Testar conex√£o com a API
echo ""
echo "üîç Testando conex√£o com a API..."
API_RESPONSE=$(curl -s "$NEXT_PUBLIC_EVOLUTION_URL" 2>/dev/null || echo "failed")

if [ "$API_RESPONSE" != "failed" ]; then
    API_STATUS=$(echo "$API_RESPONSE" | grep -o '"status":[0-9]*' | cut -d':' -f2)
    API_VERSION=$(echo "$API_RESPONSE" | grep -o '"version":"[^"]*"' | cut -d'"' -f4)
    
    if [ -n "$API_STATUS" ] && [ "$API_STATUS" = "200" ]; then
        echo "‚úÖ API respondeu com sucesso (HTTP 200)"
        [ -n "$API_VERSION" ] && echo "üì¶ Vers√£o da API: $API_VERSION"
    else
        echo "‚ö†Ô∏è  API est√° acess√≠vel mas retornou status: ${API_STATUS:-desconhecido}"
    fi
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel conectar √† API em $NEXT_PUBLIC_EVOLUTION_URL"
    echo "   Certifique-se de que a Evolution API est√° rodando."
fi

# Verificar modo de execu√ß√£o
echo ""
echo "================================================"
echo "Escolha o modo de execu√ß√£o:"
echo "1) Desenvolvimento (com hot-reload)"
echo "2) Produ√ß√£o (build + start)"
echo "================================================"
read -p "Digite sua escolha (1 ou 2): " choice

case $choice in
    1)
        echo ""
        echo "üöÄ Iniciando em modo DESENVOLVIMENTO..."
        echo "‚ú® Hot-reload ativado - altera√ß√µes ser√£o aplicadas automaticamente"
        echo ""
        echo "üåê Acesse em: http://localhost:3000"
        echo "================================================"
        echo ""
        npm run dev
        ;;
    2)
        echo ""
        echo "üèóÔ∏è  Fazendo build da aplica√ß√£o..."
        npm run build
        if [ $? -ne 0 ]; then
            echo "‚ùå Falha no build da aplica√ß√£o"
            exit 1
        fi
        
        echo ""
        echo "‚úÖ Build conclu√≠do com sucesso!"
        echo ""
        echo "üöÄ Iniciando em modo PRODU√á√ÉO..."
        echo ""
        echo "üåê Acesse em: http://localhost:3000"
        echo "================================================"
        echo ""
        npm start
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida. Saindo..."
        exit 1
        ;;
esac